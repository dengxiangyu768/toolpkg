apiVersion: apps/v1beta1
kind: DaemonSet
metadata:
    name: ttsserver
    namespace: cloud
spec:
    selector:
      matchLabels:
        app: ttsserver
        tier: backend
    minReadySeconds: 5
    updateStrategy:
      type: RollingUpdate
      maxUnavailable: 0
    template:
        metadata:
            annotations: {}
            labels:
                app: ttsserver
                tier: backend
        spec:
            terminationGracePeriodSeconds: 60            
            containers:
                - name: ttsserver
                  image: docker.v2.aispeech.com/aispeech/ttsserver:{{ ttsserver_version }}
                  imagePullPolicy: IfNotPresent 
                  livenessProbe:
                    httpGet:
                      path: /healthz
                      port: 28002
                    initialDelaySeconds: 60
                    periodSeconds: 60
                    timeoutSeconds: 10
                  readinessProbe:
                    httpGet:
                      path: /healthz
                      port: 28002
                    initialDelaySeconds: 2
                    periodSeconds: 60
                    timeoutSeconds: 10
                    failureThreshold: 2
                    successThreshold: 1
                  lifecycle:
                    preStop:
                      exec:
                        command: ["/opt/aispeech/olive/openresty/nginx/sbin/nginx", "-p", "/opt/aispeech/olive/", "-c", "/opt/aispeech/olive/conf/nginx.conf", "-s", "quit"]  
                  ports:
                    - containerPort: 28002
                  envFrom:
                    - configMapRef:
                        name: cloud-config
                  volumeMounts:
                    - name: cntts-data
                      mountPath: /opt/aispeech/olive/modules
                    - name: resserver-data
                      mountPath: /opt/aispeech/olive/res
            volumes:
                - name: "cntts-data"
                  hostPath:
                    path: "/data/resources/resource"
                - name: "resserver-data"
                  hostPath:
                    path: "/data/share/resserver"
            nodeSelector:
                ttsserver: "1"
---
apiVersion: v1
kind: Service
metadata:
    name: ttsserver
    namespace: cloud
spec:
    type: NodePort
    ports:
    - port: 28002
      targetPort: 28002
    selector:
        app: ttsserver
        tier: backend
