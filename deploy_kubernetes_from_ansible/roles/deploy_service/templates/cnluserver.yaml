apiVersion: apps/v1beta1
kind: Deployment
metadata:
    name: cnluserver
    namespace: cloud
spec:
    selector:
      matchLabels:
        app: cnluserver
        tier: backend
    minReadySeconds: 5
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxSurge: 50%
        maxUnavailable: 0
    replicas: 1
    template:
        metadata:
            annotations: {}
            labels:
                app: cnluserver
                tier: backend
        spec:
            terminationGracePeriodSeconds: 60
            initContainers:
                - name: wait-for-rsync
                  image: docker.v2.aispeech.com/aispeech/cnlu-rsync:{{ cnluserver_version }}
                  imagePullPolicy: Always
                  envFrom:
                    - configMapRef:
                        name: cloud-config
                  volumeMounts:
                    - name: cloud-cnluserver-data
                      mountPath: /data/resources/semantic/builtin_vocabs/
            containers:
                - name: cnluserver
                  image: docker.v2.aispeech.com/aispeech/cnluserver:{{ cnluserver_version }}
                  imagePullPolicy: IfNotPresent
                  livenessProbe:
                    exec:
                      command:
                        - /opt/aispeech/healthcheck/health_check.sh
                    initialDelaySeconds: 10
                    periodSeconds: 5
                    timeoutSeconds: 10
                    failureThreshold: 2
                    successThreshold: 1
                  readinessProbe:
                    exec:
                      command:
                        - /opt/aispeech/healthcheck/health_check.sh
                    initialDelaySeconds: 10
                    periodSeconds: 2
                    timeoutSeconds: 10
                    failureThreshold: 2
                    successThreshold: 1
                  lifecycle:
                    preStop:
                      exec:
                        command: ["/opt/aispeech/openresty/nginx/sbin/nginx", "-p", "/opt/aispeech", "-c", "/opt/aispeech/conf/nginx.conf", "-s", "quit"]
                  ports:
                    - containerPort: 28002
                  env:
                    - name: NODENAME
                      valueFrom:  
                        fieldRef:  
                          fieldPath: spec.nodeName                    
                  envFrom:
                    - configMapRef:
                        name: cloud-config
                  volumeMounts:
                    - name: cloud-cnluserver-data
                      mountPath: /data/resources/semantic/builtin_vocabs/
                    - name: resserver-data
                      mountPath: /opt/aispeech/resources/resserver
            volumes:
                - name: "cloud-cnluserver-data"
                  hostPath:
                    path: "/data/resources/semantic/builtin_vocabs/"
                - name: "resserver-data"
                  hostPath:
                    path: "/data/share/resserver"
            nodeSelector:
                cnluserver: "1"
---
apiVersion: v1
kind: Service
metadata:
    name: cnluserver
    namespace: cloud
spec:
    type: NodePort
    ports:
    - port: 28002
      targetPort: 28002
    selector:
        app: cnluserver
        tier: backend
